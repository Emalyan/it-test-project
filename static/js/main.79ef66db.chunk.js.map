{"version":3,"sources":["store/movie-board-store.ts","store/use-store.tsx","components/src/movies-board/styled.ts","components/src/movies-board/component.tsx","components/src/movies-board/route-component.tsx","components/src/movies-board/logic.ts","components/src/movies-board/index.ts","components/src/card/index.ts","components/src/buttons/green-button/styled.ts","components/src/buttons/green-button/component.tsx","components/src/buttons/index.ts","components/src/card/card-description.tsx","components/src/card/logic.ts","components/src/card/styled.ts","components/src/card/component.tsx","components/index.ts","constants.ts","serviceWorker.ts","body/styled.ts","body/component.tsx","header/styled.ts","header/component.tsx","footer/styled.ts","footer/component.tsx","global-styled.ts","app.tsx","index.tsx"],"names":["Movie","types","model","id","string","name","image","countries","vote","count_vote","actors","order","number","Movies","targetCardId","movies","array","actions","self","setTargetCardId","loadMovies","flow","setMovies","savedPosition","sessionStorage","getItem","getMovies","data","JSON","parse","forEach","element","savedMovie","find","item","afterCreate","a","fetch","MOVIES_API_URL","response","json","result","index","storeContext","React","createContext","createStore","create","StoreProvider","props","store","useLocalStore","Provider","value","children","useStore","useContext","Error","Styled","MoviesBoard","styled","div","observer","map","key","MoviesBoardRoute","path","component","savePosition","board","document","getElementById","cardsPosition","childNodes","card","cardPosition","style","push","jsonData","stringify","setItem","swapElements","firstElement","secondElement","start","Date","now","timer","setInterval","orderFirstElement","orderSecondElement","timePassed","transform","clearInterval","swapAnimation","Button","button","GreenButton","text","Description","setClonePosition","event","main","left","pageX","offsetWidth","top","pageY","scrollTop","offsetHeight","HEADER_HEIGHT","changeCardsStyles","opacity","imgDisplay","descriptionDisplay","querySelectorAll","firstChild","lastChild","img","description","display","Card","Img","Id","replace","split","getActors","imageUrl","draggable","onDragStart","target","clone","cloneNode","position","pointerEvents","setAttribute","createClone","parentNode","appendChild","dataTransfer","effectAllowed","setData","emptyBlock","createElement","setDragImage","onDragOver","preventDefault","onDragEnter","transferCard","onDragEnd","removeChild","onDrag","src","UPLOAD_MOVIES_IMAGE_DOMEN","FOOTER_HEIGHT","Boolean","window","location","hostname","match","Body","Header","header","Footer","footer","GlobalStyle","createGlobalStyle","AppRouter","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79ef66db.chunk.js","sourcesContent":["import { types, flow, Instance } from \"mobx-state-tree\";\r\nimport { MOVIES_API_URL } from \"../constants\";\r\nimport { CardPosition } from \"../components\";\r\n\r\nconst Movie = types.model(\"Movie\", {\r\n  id: types.string,\r\n  name: types.string,\r\n  image: types.string,\r\n  countries: types.string,\r\n  vote: types.string,\r\n  count_vote: types.string,\r\n  actors: types.string,\r\n  order: types.number\r\n});\r\n\r\nexport const Movies = types\r\n  .model(\"Movies\", {\r\n    targetCardId: \"\",\r\n    movies: types.array(Movie)\r\n  })\r\n  .actions(self => {\r\n    const setTargetCardId = (id: string) => {\r\n      self.targetCardId = id;\r\n    };\r\n\r\n    const loadMovies = flow(function* setMovies() {\r\n      const savedPosition = sessionStorage.getItem(\"cardsPositions\");\r\n      const movies = yield getMovies();\r\n      if (savedPosition) {\r\n        const data: CardPosition[] = JSON.parse(savedPosition);\r\n        movies.forEach((element: MovieInstance) => {\r\n          const savedMovie = data.find(item => item.id === element.id);\r\n          if (savedMovie) {\r\n            element.order = savedMovie.order;\r\n          }\r\n        });\r\n      }\r\n      self.movies = movies;\r\n    });\r\n\r\n    return { setTargetCardId, loadMovies };\r\n  })\r\n  .actions(self => ({\r\n    afterCreate() {\r\n      self.loadMovies();\r\n    }\r\n  }));\r\n\r\nconst getMovies = async () => {\r\n  const response = await fetch(MOVIES_API_URL);\r\n  const data = await response.json();\r\n  data.result.forEach((element: MovieInstance, index: number) => {\r\n    element.order = index + 1;\r\n  });\r\n\r\n  return data.result;\r\n};\r\n\r\nexport interface MoviesInstance extends Instance<typeof Movies> {}\r\nexport interface MovieInstance extends Instance<typeof Movie> {}\r\n","import { Movies, MoviesInstance } from \"./movie-board-store\";\r\nimport React, { FunctionComponent, useContext } from \"react\";\r\nimport { useLocalStore } from \"mobx-react\";\r\n\r\nexport const storeContext = React.createContext<MoviesInstance | null>(null);\r\n\r\nconst createStore = () => Movies.create({});\r\n\r\nexport const StoreProvider: FunctionComponent = props => {\r\n  const store = useLocalStore(createStore);\r\n  return (\r\n    <storeContext.Provider value={store}>\r\n      {props.children}\r\n    </storeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useStore = () => {\r\n  const store = useContext(storeContext);\r\n  if (!store) {\r\n    throw new Error(\"Error\");\r\n  }\r\n  return store;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst MoviesBoard = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    font-size: 20px;\r\n    font-style: italic;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const Styled = { MoviesBoard }","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport { Card } from \"../card\";\r\nimport { MovieInstance } from \"../../../store/movie-board-store\";\r\nimport { useStore } from \"../../../store/use-store\";\r\n\r\nimport { Styled } from \"./styled\";\r\n\r\nexport const MoviesBoard = observer(() => {\r\n  const movies = useStore();\r\n  return (\r\n    <Styled.MoviesBoard id=\"movies-board\">\r\n      {movies.movies.map((item: MovieInstance) => {\r\n        return (\r\n          <Card\r\n            key={item.id}\r\n            id={item.id}\r\n            name={item.name}\r\n            image={item.image}\r\n            countries={item.countries}\r\n            actors={item.actors}\r\n            vote={item.vote}\r\n            count_vote={item.count_vote}\r\n            order={item.order}\r\n          />\r\n        );\r\n      })}\r\n    </Styled.MoviesBoard>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { StoreProvider } from \"../../../store/use-store\";\r\nimport { MoviesBoard } from \"./component\";\r\n\r\nexport const MoviesBoardRoute = () => {\r\n  return (\r\n    <StoreProvider>\r\n      <Route path=\"/gallery\" component={MoviesBoard} />\r\n    </StoreProvider>\r\n  );\r\n};\r\n","import { CardPosition } from \"../card\";\r\n\r\ninterface SwapElements {\r\n  timePassed: number;\r\n  firstElement: HTMLElement;\r\n  secondElement: HTMLElement;\r\n  orderFirstElement: number;\r\n  orderSecondElement: number;\r\n}\r\n\r\nexport const savePosition = () => {\r\n  const board = document.getElementById(\"movies-board\");\r\n  if (board != null) {\r\n    const cardsPosition: CardPosition[] = [];\r\n    board.childNodes.forEach((item: ChildNode) => {\r\n      const card = item as HTMLElement;\r\n      const cardPosition: CardPosition = {\r\n        id: card.id,\r\n        order: +card.style.order\r\n      };\r\n      cardsPosition.push(cardPosition);\r\n    });\r\n\r\n    const jsonData = JSON.stringify(cardsPosition);\r\n    sessionStorage.setItem(\"cardsPositions\", jsonData);\r\n  }\r\n};\r\n\r\nexport const swapElements = (\r\n  firstElement: HTMLElement,\r\n  secondElement: HTMLElement\r\n) => {\r\n  let start = Date.now();\r\n  const timer = setInterval(() => {\r\n    const orderFirstElement = firstElement.style.order;\r\n    const orderSecondElement = secondElement.style.order;\r\n    let timePassed = Date.now() - start;\r\n\r\n    if (timePassed >= 100) {\r\n      firstElement.style.order = orderSecondElement;\r\n      secondElement.style.order = orderFirstElement;\r\n      secondElement.style.transform = \"\";\r\n      firstElement.style.transform = \"\";\r\n      clearInterval(timer);\r\n      return;\r\n    }\r\n\r\n    const data: SwapElements = {\r\n      timePassed,\r\n      firstElement,\r\n      secondElement,\r\n      orderFirstElement: +orderFirstElement,\r\n      orderSecondElement: +orderSecondElement\r\n    };\r\n\r\n    swapAnimation(data);\r\n  }, 5);\r\n};\r\n\r\nconst swapAnimation = (props: SwapElements) => {\r\n  if (props.orderFirstElement > props.orderSecondElement + 1) {\r\n    props.firstElement.style.transform = `translateY(-${props.timePassed *\r\n      2.5}px)`;\r\n    props.secondElement.style.transform = `translateY(${props.timePassed *\r\n      2.5}px)`;\r\n  } else if (props.orderFirstElement + 1 < props.orderSecondElement) {\r\n    props.firstElement.style.transform = `translateY(${props.timePassed *\r\n      2.5}px)`;\r\n    props.secondElement.style.transform = `translateY(-${props.timePassed *\r\n      2.5}px)`;\r\n  } else if (+props.orderFirstElement > +props.orderSecondElement) {\r\n    props.firstElement.style.transform = `translateX(-${props.timePassed *\r\n      2}px)`;\r\n    props.secondElement.style.transform = `translateX(${props.timePassed *\r\n      2}px)`;\r\n  } else if (+props.orderFirstElement < +props.orderSecondElement) {\r\n    props.firstElement.style.transform = `translateX(${props.timePassed *\r\n      2}px)`;\r\n    props.secondElement.style.transform = `translateX(-${props.timePassed *\r\n      2}px)`;\r\n  }\r\n};\r\n","export * from \"./route-component\";\r\nexport * from \"./logic\";\r\n","export * from \"./component\";\r\nexport * from \"./interfaces\";\r\n","import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  min-width: 120px;\r\n  height: 30px;\r\n  border-radius: 7px;\r\n  font-weight: 700;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  bottom: 15px;\r\n  right: 15px;\r\n  border: none;\r\n  background: rgb(138, 200, 88)\r\n    linear-gradient(rgb(138, 200, 88), rgb(60, 200, 88));\r\n  box-shadow: inset 0 -2px 1px rgba(0, 0, 0, 0),\r\n    inset 0 1px 2px rgba(0, 0, 0, 0), inset 0 0 0 60px rgba(255, 255, 0, 0);\r\n\r\n  &:hover {\r\n    background-color: #59f23a;\r\n    box-shadow: inset 0 -1px 1px rgba(0, 0, 0, 0),\r\n      inset 0 1px 2px rgba(0, 0, 0, 0), inset 0 0 0 60px rgba(255, 255, 0, 0.5);\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:active {\r\n    padding: 6px 8px 6px;\r\n    border-color: rgba(177, 159, 0, 1);\r\n    box-shadow: inset 0 -1px 1px rgba(0, 0, 0, 0.1),\r\n      inset 0 1px 2px rgba(0, 0, 0, 0.3),\r\n      inset 0 0 0 60px rgba(255, 255, 0, 0.45);\r\n  }\r\n`;\r\n\r\nexport const Styled = { Button };\r\n","import React from \"react\";\r\n\r\nimport { Styled } from \"./styled\";\r\n\r\nexport const GreenButton = (props: { text: string }) => {\r\n  return <Styled.Button>{props.text}</Styled.Button>;\r\n};\r\n","export * from \"./green-button\";\r\n","import React from \"react\";\r\n\r\ninterface Description {\r\n  name: string;\r\n  countries: string;\r\n  count_vote: string;\r\n  vote: string;\r\n  actors: string[];\r\n}\r\n\r\nexport const Description = (props: Description) => {\r\n  return (\r\n    <>\r\n      <h3>{props.name}</h3>\r\n      <div>{props.countries}</div>\r\n      <div>{props.count_vote}</div>\r\n      <div>{`Рейтинг ${props.vote}`}</div>\r\n      {props.actors[0] !== \"\" && (\r\n        <>\r\n          <div>Актеры:</div>\r\n          <ul>\r\n            {props.actors.map((item, index) => {\r\n              return <li key={index}>{item}</li>;\r\n            })}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { HEADER_HEIGHT } from \"../../../constants\";\r\n\r\nexport const createClone = (item: HTMLElement) => {\r\n  const clone = item.cloneNode(true) as HTMLElement;\r\n  clone.style.position = \"absolute\";\r\n  clone.style.pointerEvents = \"none\";\r\n  clone.setAttribute(\"id\", \"clone\");\r\n  return clone;\r\n};\r\n\r\nexport const setClonePosition = (item: HTMLElement, event: React.DragEvent<Element>) => {\r\n  const main = document.getElementById(\"main\");\r\n  if (main != null) {\r\n    item.style.left = event.pageX - item.offsetWidth / 2 + \"px\";\r\n    item.style.top =\r\n      event.pageY + main.scrollTop - item.offsetHeight + HEADER_HEIGHT + \"px\";\r\n  }\r\n};\r\n\r\nexport const getActors = (actors: string) => {\r\n  const regExp = /<[^>]+>/g;\r\n  const actorList = actors.replace(regExp, \"\");\r\n  return actorList.split(\", \");\r\n};\r\n\r\nexport const getImageUrl = (url: string) => {\r\n  return url.replace(\"sm_\", \"\");\r\n};\r\n\r\nexport const addStyles = (item: HTMLElement) => {\r\n  changeCardsStyles(item, \"0.5\", \"block\", \"none\");\r\n};\r\n\r\nexport const resetStyles = (item: HTMLElement) => {\r\n  changeCardsStyles(item);\r\n};\r\n\r\nexport const changeCardsStyles = (\r\n  item: HTMLElement,\r\n  opacity: string = \"\",\r\n  imgDisplay: string = \"\",\r\n  descriptionDisplay: string = \"\"\r\n) => {\r\n  item.style.opacity = opacity;\r\n  document\r\n    .querySelectorAll('div[draggable=\"true\"]')\r\n    .forEach((item: Element) => {\r\n      if (item.firstChild != null && item.lastChild !== null) {\r\n        const img = item.firstChild as HTMLElement;\r\n        const description = item.lastChild as HTMLElement;\r\n        img.style.display = imgDisplay;\r\n        description.style.display = descriptionDisplay;\r\n      }\r\n    });\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Card = styled.div`\r\n  position: relative;\r\n  margin: 15px 25px;\r\n  width: 250px;\r\n  height: 400px;\r\n  border: 2px solid #8ac858;\r\n  border-radius: 15px;\r\n  word-break: break-word;\r\n  cursor: grab;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: inherit;\r\n  height: inherit;\r\n  border-radius: 13px;\r\n\r\n  ${Card}:hover & {\r\n    display: none;\r\n  }\r\n\r\n  #clone: focus {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  display: none;\r\n  padding: 10px;\r\n\r\n  ${Card}:hover & {\r\n    display: block;\r\n  }\r\n\r\n  div {\r\n    padding: 2px 0;\r\n  }\r\n\r\n  ul {\r\n    margin: 5px 0;\r\n  }\r\n\r\n  h3 {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst Id = styled.div`\r\n  display: none;\r\n`;\r\n\r\nexport const Styled = { Img, Card, Description, Id };\r\n","import React, { DragEvent } from \"react\";\r\n\r\nimport { GreenButton } from \"../buttons\";\r\nimport { Description } from \"./card-description\";\r\nimport { UPLOAD_MOVIES_IMAGE_DOMEN } from \"../../../constants\";\r\nimport { savePosition, swapElements } from \"../movies-board\";\r\nimport {\r\n  createClone,\r\n  setClonePosition,\r\n  getActors,\r\n  getImageUrl,\r\n  addStyles,\r\n  resetStyles\r\n} from \"./logic\";\r\nimport { useStore } from \"../../../store/use-store\";\r\n\r\nimport { Movie } from \"./interfaces\";\r\n\r\nimport { Styled } from \"./styled\";\r\n\r\nexport const Card = (props: Movie) => {\r\n  const movies = useStore();\r\n  const actors = getActors(props.actors);\r\n  const imageUrl = getImageUrl(props.image);\r\n\r\n  const onDragEnter = (event: DragEvent) => {\r\n    const target = event.target as HTMLElement;\r\n    const card = target.parentNode as HTMLElement;\r\n    if (+card.id && movies.targetCardId !== \"\") {\r\n      const transferCard = document.getElementById(movies.targetCardId);\r\n      if (transferCard && card !== transferCard) {\r\n        swapElements(card, transferCard);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onDragOver = (event: DragEvent) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const onDragStart = (event: DragEvent) => {\r\n    const card = event.target as HTMLElement;\r\n    const clone = createClone(card) as HTMLElement;\r\n    if (card.parentNode) {\r\n      card.parentNode.appendChild(clone);\r\n    }\r\n    setClonePosition(clone, event);\r\n\r\n    addStyles(card);\r\n    movies.setTargetCardId(card.id);\r\n    event.dataTransfer.effectAllowed = \"move\";\r\n    event.dataTransfer.setData(\"data\", card.id);\r\n\r\n    const emptyBlock = document.createElement(\"div\");\r\n    event.dataTransfer.setDragImage(emptyBlock, 0, 0);\r\n  };\r\n\r\n  const onDrag = (event: DragEvent) => {\r\n    const clone = document.getElementById(\"clone\");\r\n    if (clone !== null) {\r\n      setClonePosition(clone, event);\r\n    }\r\n  };\r\n\r\n  const onDragEnd = (event: DragEvent) => {\r\n    const card = event.target as HTMLElement;\r\n    resetStyles(card);\r\n    const clone = document.getElementById(\"clone\");\r\n    const board = document.getElementById(\"movies-board\");\r\n    if (board !== null && clone !== null) {\r\n      board.removeChild(clone);\r\n    }\r\n    savePosition();\r\n  };\r\n\r\n  return (\r\n    <Styled.Card\r\n      id={props.id}\r\n      draggable={true}\r\n      onDragStart={onDragStart}\r\n      onDragOver={onDragOver}\r\n      onDragEnter={onDragEnter}\r\n      onDragEnd={onDragEnd}\r\n      onDrag={onDrag}\r\n      style={{ order: props.order }}\r\n    >\r\n      <Styled.Img src={`${UPLOAD_MOVIES_IMAGE_DOMEN}${imageUrl}`} />\r\n      <Styled.Description>\r\n        <Description\r\n          name={props.name}\r\n          countries={props.countries}\r\n          count_vote={props.count_vote}\r\n          vote={props.vote}\r\n          actors={actors}\r\n        />\r\n        <GreenButton text=\"hello\" />\r\n      </Styled.Description>\r\n    </Styled.Card>\r\n  );\r\n};\r\n","export * from \"./src/card\";\r\nexport * from \"./src/movies-board\";\r\nexport * from \"./src/buttons\";\r\n","export const FOOTER_HEIGHT = 50;\r\nexport const HEADER_HEIGHT = 50;\r\nexport const UPLOAD_MOVIES_IMAGE_DOMEN = \"https://kinoafisha.ua\";\r\nexport const MOVIES_API_URL =\r\n  \"https://kinoafisha.herokuapp.com/api/kinoafisha_load\";\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import styled from \"styled-components\";\r\n\r\nimport { FOOTER_HEIGHT, HEADER_HEIGHT } from \"../constants\";\r\n\r\nconst Body = styled.main`\r\n  overflow: auto;\r\n  position: fixed;\r\n  height: calc(100% - (${FOOTER_HEIGHT}px + ${HEADER_HEIGHT}px));\r\n  background-color: #f4f4f4;\r\n`;\r\n\r\nexport const Styled = { Body };\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\nimport { Styled } from \"./styled\";\r\n\r\nexport const Body: FunctionComponent = props => {\r\n  return <Styled.Body id=\"main\">{props.children}</Styled.Body>;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { HEADER_HEIGHT } from \"../constants\";\r\n\r\nconst Header = styled.header`\r\n  height: ${HEADER_HEIGHT}px;\r\n  background-color: #8ac858;\r\n`;\r\n\r\nexport const Styled = { Header };\r\n","import React from \"react\";\r\n\r\nimport { Styled } from \"./styled\";\r\n\r\nexport const Header = () => {\r\n  return <Styled.Header />;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { FOOTER_HEIGHT } from \"../constants\";\r\n\r\nconst Footer = styled.footer`\r\n  width: 100%;\r\n  height: ${FOOTER_HEIGHT}px;\r\n  background-color: #8ac858;\r\n  position: absolute;\r\n  bottom: 0;\r\n`;\r\n\r\nexport const Styled = { Footer };\r\n","import React from \"react\";\r\n\r\nimport { Styled } from \"./styled\";\r\n\r\nexport const Footer = () => {\r\n  return <Styled.Footer />;\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    body {\r\n        margin: 0;        \r\n    }             \r\n`;\r\n","import { Switch } from \"react-router\";\r\nimport React from \"react\";\r\n\r\nimport { Body } from \"./body\";\r\nimport { Header } from \"./header\";\r\nimport { Footer } from \"./footer\";\r\nimport { MoviesBoardRoute } from \"./components\";\r\n\r\nimport { GlobalStyle } from \"./global-styled\";\r\n\r\nexport const App = () => {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Header />\r\n      <Body>\r\n        <AppRouter />\r\n      </Body>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Switch>\r\n      <MoviesBoardRoute />\r\n    </Switch>\r\n  );\r\n};\r\n","import { HashRouter as Router } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { App } from \"./app\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}